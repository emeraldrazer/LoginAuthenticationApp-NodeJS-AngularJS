{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n  }\n  registerClick(username, password) {\n    if (username.value === '' && password.value === '') {\n      return alert(\"Invalid Credentials\");\n    }\n    fetch('http://localhost:3001/api/v2/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username.value,\n        password: password.value\n      })\n    }).then(response => {\n      if (!response.ok) {\n        return alert('Invalid Credentials');\n      }\n      this.router.navigate(['/']);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    username.value = '';\n    password.value = '';\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 11,\n  vars: 0,\n  consts: [[1, \"login\"], [\"type\", \"any\", \"placeholder\", \"Username\", \"required\", \"\", 1, \"textarea-as-input\"], [\"username\", \"\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"textarea-as-input\"], [\"password\", \"\"], [\"id\", \"loginBTN\", 1, \"myButton\", 3, \"click\"], [\"href\", \"/register\", 1, \"redirect\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 1, 2)(5, \"input\", 3, 4);\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_7_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(4);\n        const _r1 = i0.ɵɵreference(6);\n        return i0.ɵɵresetView(ctx.registerClick(_r0, _r1));\n      });\n      i0.ɵɵtext(8, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"a\", 6);\n      i0.ɵɵtext(10, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 840:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(46:34) O:\\\\\\\\Other\\\\\\\\Websites & APIs\\\\\\\\login-authentication-app\\\\\\\\app\\\\\\\\src\\\\\\\\app\\\\\\\\components\\\\\\\\login\\\\\\\\login.component.css Missed semicolon\\\\n\\\\n \\\\u001b[90m 44 | \\\\u001b[39m\\\\n \\\\u001b[90m 45 | \\\\u001b[39ma\\\\u001b[33m:\\\\u001b[39mhover \\\\u001b[33m{\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 46 | \\\\u001b[39m    box-shadow\\\\u001b[33m:\\\\u001b[39m 0px 6px 12px \\\\u001b[36mrgba\\\\u001b[39m\\\\u001b[36m(45, 52, 54,1.0)\\\\u001b[39m\\\\n \\\\u001b[90m    | \\\\u001b[39m                                 \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 47 | \\\\u001b[39m    color\\\\u001b[33m:\\\\u001b[39m white\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 48 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[840]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=login.component.css.map*/\"]\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAE1B;EAEAC,aAAa,CAACC,QAA0B,EAAEC,QAA0B;IAElE,IAAID,QAAQ,CAACE,KAAK,KAAK,EAAE,IAAID,QAAQ,CAACC,KAAK,KAAK,EAAE,EAAE;MAClD,OAAOC,KAAK,CAAC,qBAAqB,CAAC;;IAGrCC,KAAK,CAAC,oCAAoC,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;OACjB;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBT,QAAQ,EAAEA,QAAQ,CAACE,KAAK;QACxBD,QAAQ,EAAEA,QAAQ,CAACC;OACpB;KACF,CAAC,CACCQ,IAAI,CAACC,QAAQ,IAAG;MACf,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,OAAOT,KAAK,CAAC,qBAAqB,CAAC;;MAGrC,IAAI,CAACL,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAG;MACbC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;IAEJf,QAAQ,CAACE,KAAK,GAAG,EAAE;IACnBD,QAAQ,CAACC,KAAK,GAAG,EAAE;EAGrB;;AArCWN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCR3BC,8BAAmB;MACXA,qBAAK;MAAAA,iBAAK;MACdA,8BAAsF;MAEtFA,iCAAmF;MAA5CA;QAAAA;QAAA;QAAA;QAAA,OAASA,0CAAiC;MAAA,EAAC;MAACA,qBAAK;MAAAA,iBAAS;MACjGA,4BAAqC;MAAAA,yBAAQ;MAAAA,iBAAI","names":["LoginComponent","constructor","router","registerClick","username","password","value","alert","fetch","method","headers","body","JSON","stringify","then","response","ok","navigate","catch","error","console","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["O:\\Other\\Websites & APIs\\login-authentication-app\\app\\src\\app\\components\\login\\login.component.ts","O:\\Other\\Websites & APIs\\login-authentication-app\\app\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private router: Router) { \n    \n  }\n\n  registerClick(username: HTMLInputElement, password: HTMLInputElement) {\n\n    if (username.value === '' && password.value === '') {\n      return alert(\"Invalid Credentials\")\n    }\n\n    fetch('http://localhost:3001/api/v2/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username.value,\n        password: password.value,\n      })\n    })\n      .then(response => {\n        if (!response.ok) {\n          return alert('Invalid Credentials')\n        }\n\n        this.router.navigate(['/']);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n\n    username.value = ''\n    password.value = ''\n\n\n  }\n}\n","<div class=\"login\">\n    <h1>Login</h1>\n    <input type=\"any\" class=\"textarea-as-input\" #username placeholder=\"Username\" required>\n    <input type=\"password\" class=\"textarea-as-input\" #password placeholder=\"Password\" required>\n    <button id=\"loginBTN\" class=\"myButton\" (click)=\"registerClick(username, password)\">Login</button>\n    <a href=\"/register\" class=\"redirect\">Register</a>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}